{"ast":null,"code":"var _jsxFileName = \"/Users/blokhinsergey/Desktop/StudyIt/React/netology/api-thunk/client/src/components/input-form/input-form.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addInput } from \"../../actions/inputActions\";\nimport \"./input-from.css\";\n\nconst InputForm = ({\n  error,\n  addInput\n}) => {\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const clearInputFields = () => {\n    setPrice(\"\");\n    setName(\"\");\n    setContent(\"\");\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addInput(name, price, content);\n    clearInputFields();\n  };\n\n  if (error !== null) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    }, error.message);\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"\\u0412\\u0438\\u0434 \\u0440\\u0435\\u043C\\u043E\\u043D\\u0442\\u0430\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"name-input\",\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"\\u0426\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"price-input\",\n    type: \"number\",\n    value: price,\n    onChange: e => setPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"content-input\",\n    type: \"text\",\n    value: content,\n    onChange: e => setContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"save-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Save\"));\n};\n\nInputForm.propTypes = {\n  editItem: PropTypes.object.isRequired,\n  editInput: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  editMode: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  editItem: state.inputs.editItem,\n  error: state.inputs.error,\n  loading: state.inputs.loading,\n  editMode: state.inputs.editMode\n});\n\nexport default connect(mapStateToProps, {\n  addInput\n})(InputForm);","map":{"version":3,"sources":["/Users/blokhinsergey/Desktop/StudyIt/React/netology/api-thunk/client/src/components/input-form/input-form.js"],"names":["React","useState","PropTypes","connect","addInput","InputForm","error","name","setName","price","setPrice","content","setContent","clearInputFields","handleSubmit","e","preventDefault","message","target","value","propTypes","editItem","object","isRequired","editInput","func","string","loading","bool","editMode","mapStateToProps","state","inputs"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {addInput} from \"../../actions/inputActions\";\nimport \"./input-from.css\";\n\nconst InputForm = ({error, addInput}) => {\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const clearInputFields = () => {\n    setPrice(\"\");\n    setName(\"\");\n    setContent(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    addInput(name, price, content);\n    clearInputFields();\n  };\n\n  if (error !== null) {\n    return <p className=\"error\">{error.message}</p>;\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <label>Вид ремонта</label>\n      <input\n        className=\"name-input\"\n        type=\"text\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        autoFocus\n      />\n      <label>Цена</label>\n      <input\n        className=\"price-input\"\n        type=\"number\"\n        value={price}\n        onChange={(e) => setPrice(e.target.value)}\n      />\n      <label>Описание</label>\n      <input\n        className=\"content-input\"\n        type=\"text\"\n        value={content}\n        onChange={(e) => setContent(e.target.value)}\n      />\n      <button type=\"submit\" className=\"save-btn\">\n        Save\n      </button>\n    </form>\n  );\n};\n\nInputForm.propTypes = {\n  editItem: PropTypes.object.isRequired,\n  editInput: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  editMode: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  editItem: state.inputs.editItem,\n  error: state.inputs.error,\n  loading: state.inputs.loading,\n  editMode: state.inputs.editMode,\n});\n\nexport default connect(mapStateToProps, {addInput})(InputForm);\n"]},"metadata":{},"sourceType":"module"}