{"ast":null,"code":"import { ADD_INPUT, SET_LOADING, REMOVE_INPUT, EDIT_INPUT, ADD_EDITED_INPUTS, HANDLE_FILTER } from \"../actions/types\";\nconst data = [{\n  id: 1,\n  task: \"Замена стёкл\",\n  price: \"14\"\n}, {\n  id: 2,\n  task: \"Ремонт окон\",\n  price: \"15\"\n}, {\n  id: 3,\n  task: \"Ремонт дверей\",\n  price: \"25\"\n}];\nconst intialState = {\n  editItem: {},\n  editMode: false,\n  list: data\n};\nexport default ((state = intialState, action) => {\n  switch (action.type) {\n    case ADD_INPUT:\n      return { ...state,\n        list: [...state.list, {\n          id: action.id,\n          task: action.task,\n          price: action.price\n        }]\n      };\n\n    case REMOVE_INPUT:\n      return { ...state,\n        list: [...state.list.filter(input => input.id !== action.id)]\n      };\n\n    case EDIT_INPUT:\n      return { ...state,\n        editMode: !state.editMode,\n        editItem: state.list.filter(input => input.id === action.id)\n      };\n\n    case ADD_EDITED_INPUTS:\n      return {\n        editMode: !state.editMode,\n        editItem: {},\n        list: [...state.list.filter(input => input.id !== action.id), {\n          id: action.id,\n          task: action.task,\n          price: action.price\n        }]\n      };\n\n    case HANDLE_FILTER:\n      if (action.task.length > 0) {\n        return { ...state,\n          list: [...state.list.filter(input => {\n            return input.task.toLowerCase().includes(action.task.toLowerCase());\n          })]\n        };\n      } else {\n        return { ...state,\n          list: data\n        };\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/blokhinsergey/Desktop/StudyIt/React/netology/api-redux/client/src/reducers/inputReducer.js"],"names":["ADD_INPUT","SET_LOADING","REMOVE_INPUT","EDIT_INPUT","ADD_EDITED_INPUTS","HANDLE_FILTER","data","id","task","price","intialState","editItem","editMode","list","state","action","type","filter","input","length","toLowerCase","includes"],"mappings":"AAAA,SACEA,SADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,UAJF,EAKEC,iBALF,EAMEC,aANF,QAOO,kBAPP;AASA,MAAMC,IAAI,GAAG,CACX;AAACC,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,cAAd;AAA8BC,EAAAA,KAAK,EAAE;AAArC,CADW,EAEX;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,aAAd;AAA6BC,EAAAA,KAAK,EAAE;AAApC,CAFW,EAGX;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,eAAd;AAA+BC,EAAAA,KAAK,EAAE;AAAtC,CAHW,CAAb;AAMA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE,EADQ;AAElBC,EAAAA,QAAQ,EAAE,KAFQ;AAGlBC,EAAAA,IAAI,EAAEP;AAHY,CAApB;AAMA,gBAAe,CAACQ,KAAK,GAAGJ,WAAT,EAAsBK,MAAtB,KAAiC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,SAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELD,QAAAA,IAAI,EAAE,CACJ,GAAGC,KAAK,CAACD,IADL,EAEJ;AACEN,UAAAA,EAAE,EAAEQ,MAAM,CAACR,EADb;AAEEC,UAAAA,IAAI,EAAEO,MAAM,CAACP,IAFf;AAGEC,UAAAA,KAAK,EAAEM,MAAM,CAACN;AAHhB,SAFI;AAFD,OAAP;;AAYF,SAAKP,YAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELD,QAAAA,IAAI,EAAE,CAAC,GAAGC,KAAK,CAACD,IAAN,CAAWI,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACX,EAAN,KAAaQ,MAAM,CAACR,EAAjD,CAAJ;AAFD,OAAP;;AAKF,SAAKJ,UAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELF,QAAAA,QAAQ,EAAE,CAACE,KAAK,CAACF,QAFZ;AAGLD,QAAAA,QAAQ,EAAEG,KAAK,CAACD,IAAN,CAAWI,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACX,EAAN,KAAaQ,MAAM,CAACR,EAAjD;AAHL,OAAP;;AAMF,SAAKH,iBAAL;AACE,aAAO;AACLQ,QAAAA,QAAQ,EAAE,CAACE,KAAK,CAACF,QADZ;AAELD,QAAAA,QAAQ,EAAE,EAFL;AAGLE,QAAAA,IAAI,EAAE,CACJ,GAAGC,KAAK,CAACD,IAAN,CAAWI,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACX,EAAN,KAAaQ,MAAM,CAACR,EAAjD,CADC,EAEJ;AACEA,UAAAA,EAAE,EAAEQ,MAAM,CAACR,EADb;AAEEC,UAAAA,IAAI,EAAEO,MAAM,CAACP,IAFf;AAGEC,UAAAA,KAAK,EAAEM,MAAM,CAACN;AAHhB,SAFI;AAHD,OAAP;;AAaF,SAAKJ,aAAL;AACE,UAAIU,MAAM,CAACP,IAAP,CAAYW,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B,eAAO,EACL,GAAGL,KADE;AAELD,UAAAA,IAAI,EAAE,CACJ,GAAGC,KAAK,CAACD,IAAN,CAAWI,MAAX,CAAmBC,KAAD,IAAW;AAC9B,mBAAOA,KAAK,CAACV,IAAN,CACJY,WADI,GAEJC,QAFI,CAEKN,MAAM,CAACP,IAAP,CAAYY,WAAZ,EAFL,CAAP;AAGD,WAJE,CADC;AAFD,SAAP;AAUD,OAXD,MAWO;AACL,eAAO,EACL,GAAGN,KADE;AAELD,UAAAA,IAAI,EAAEP;AAFD,SAAP;AAID;;AAEH;AACE,aAAOQ,KAAP;AA7DJ;AA+DD,CAhED","sourcesContent":["import {\n  ADD_INPUT,\n  SET_LOADING,\n  REMOVE_INPUT,\n  EDIT_INPUT,\n  ADD_EDITED_INPUTS,\n  HANDLE_FILTER,\n} from \"../actions/types\";\n\nconst data = [\n  {id: 1, task: \"Замена стёкл\", price: \"14\"},\n  {id: 2, task: \"Ремонт окон\", price: \"15\"},\n  {id: 3, task: \"Ремонт дверей\", price: \"25\"},\n];\n\nconst intialState = {\n  editItem: {},\n  editMode: false,\n  list: data,\n};\n\nexport default (state = intialState, action) => {\n  switch (action.type) {\n    case ADD_INPUT:\n      return {\n        ...state,\n        list: [\n          ...state.list,\n          {\n            id: action.id,\n            task: action.task,\n            price: action.price,\n          },\n        ],\n      };\n\n    case REMOVE_INPUT:\n      return {\n        ...state,\n        list: [...state.list.filter((input) => input.id !== action.id)],\n      };\n\n    case EDIT_INPUT:\n      return {\n        ...state,\n        editMode: !state.editMode,\n        editItem: state.list.filter((input) => input.id === action.id),\n      };\n\n    case ADD_EDITED_INPUTS:\n      return {\n        editMode: !state.editMode,\n        editItem: {},\n        list: [\n          ...state.list.filter((input) => input.id !== action.id),\n          {\n            id: action.id,\n            task: action.task,\n            price: action.price,\n          },\n        ],\n      };\n\n    case HANDLE_FILTER:\n      if (action.task.length > 0) {\n        return {\n          ...state,\n          list: [\n            ...state.list.filter((input) => {\n              return input.task\n                .toLowerCase()\n                .includes(action.task.toLowerCase());\n            }),\n          ],\n        };\n      } else {\n        return {\n          ...state,\n          list: data,\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}