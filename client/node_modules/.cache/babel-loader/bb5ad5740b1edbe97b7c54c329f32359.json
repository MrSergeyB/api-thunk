{"ast":null,"code":"var _jsxFileName = \"/Users/blokhinsergey/Desktop/StudyIt/React/netology/api-thunk/client/src/components/services/services.js\";\nimport React from \"react\";\nimport DisplayInput from \"../display-inputs\";\nimport InputForm from \"../input-form\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nfunction isEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n\n  return true;\n}\n\nconst Services = ({\n  editMode,\n  editItem\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, isEmpty(editItem) ? /*#__PURE__*/React.createElement(InputForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 28\n    }\n  }) : null, /*#__PURE__*/React.createElement(DisplayInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n};\n\nServices.propTypes = {\n  editMode: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  editMode: state.inputs.editMode,\n  editItem: state.inputs.editItem\n});\n\nexport default connect(mapStateToProps)(Services);","map":{"version":3,"sources":["/Users/blokhinsergey/Desktop/StudyIt/React/netology/api-thunk/client/src/components/services/services.js"],"names":["React","DisplayInput","InputForm","PropTypes","connect","isEmpty","obj","key","hasOwnProperty","Services","editMode","editItem","propTypes","bool","isRequired","mapStateToProps","state","inputs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,OAAK,IAAIC,GAAT,IAAgBD,GAAhB,EAAqB;AACnB,QAAIA,GAAG,CAACE,cAAJ,CAAmBD,GAAnB,CAAJ,EAA6B,OAAO,KAAP;AAC9B;;AACD,SAAO,IAAP;AACD;;AAED,MAAME,QAAQ,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA0B;AACzC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,OAAO,CAACM,QAAD,CAAP,gBAAoB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,GAAoC,IADvC,eAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAPD;;AASAF,QAAQ,CAACG,SAAT,GAAqB;AACnBF,EAAAA,QAAQ,EAAEP,SAAS,CAACU,IAAV,CAAeC;AADN,CAArB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,QAAQ,EAAEM,KAAK,CAACC,MAAN,CAAaP,QADW;AAElCC,EAAAA,QAAQ,EAAEK,KAAK,CAACC,MAAN,CAAaN;AAFW,CAAZ,CAAxB;;AAKA,eAAeP,OAAO,CAACW,eAAD,CAAP,CAAyBN,QAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport DisplayInput from \"../display-inputs\";\nimport InputForm from \"../input-form\";\nimport PropTypes from \"prop-types\";\n\nimport {connect} from \"react-redux\";\n\nfunction isEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n  return true;\n}\n\nconst Services = ({editMode, editItem}) => {\n  return (\n    <div>\n      {isEmpty(editItem) ? <InputForm /> : null}\n      <DisplayInput />\n    </div>\n  );\n};\n\nServices.propTypes = {\n  editMode: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  editMode: state.inputs.editMode,\n  editItem: state.inputs.editItem,\n});\n\nexport default connect(mapStateToProps)(Services);\n"]},"metadata":{},"sourceType":"module"}