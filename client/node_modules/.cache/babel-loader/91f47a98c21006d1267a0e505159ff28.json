{"ast":null,"code":"import { ADD_INPUT, SET_LOADING, SET_EDIT_MODE, GET_INPUTS, DELETE_INPUT, EDIT_INPUT, SET_CURRENT, INPUTS_ERROR } from \"./types\";\nconst http = \"http://localhost:7070/api/services/\"; // GET INPUTS\n\nexport const getInputs = () => async dispatch => {\n  dispatch(setLoading());\n\n  try {\n    const res = await fetch(`${http}`);\n    const data = await res.json();\n    dispatch({\n      type: GET_INPUTS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: INPUTS_ERROR,\n      payload: err\n    });\n  }\n}; //ADD INPUT\n\nexport const addInput = (name, price, content) => async dispatch => {\n  dispatch(setLoading());\n  console.log(\"fired\");\n\n  try {\n    console.log(\"fired\");\n    const res = await fetch(`${http}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name,\n        price,\n        content\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_INPUT,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: INPUTS_ERROR,\n      payload: err\n    });\n  }\n}; //DELETE INPUT\n\nexport const deleteInput = id => async dispatch => {\n  dispatch(setLoading());\n\n  try {\n    await fetch(`${http}:${id}`, {\n      method: \"DELETE\"\n    });\n    dispatch({\n      type: DELETE_INPUT,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: INPUTS_ERROR,\n      payload: err\n    });\n  }\n}; //SET CURRENT\n\nexport const setCurrent = id => async dispatch => {\n  dispatch(setLoading());\n\n  try {\n    const res = await fetch(`${http}${id}`);\n    const data = await res.json();\n    dispatch({\n      type: SET_CURRENT,\n      payload: data\n    });\n  } catch (err) {\n    console.dir(err);\n    dispatch({\n      type: INPUTS_ERROR,\n      payload: err\n    });\n  }\n}; // EDIT INPUT\n\nexport const editInput = (id, name, price, content) => async dispatch => {\n  dispatch(setLoading());\n\n  try {\n    const res = await fetch(`${http}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        id,\n        name,\n        price,\n        content\n      }),\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: EDIT_INPUT,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: INPUTS_ERROR,\n      payload: err\n    });\n  }\n}; // Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/blokhinsergey/Desktop/StudyIt/React/netology/api-thunk/client/src/actions/inputActions.js"],"names":["ADD_INPUT","SET_LOADING","SET_EDIT_MODE","GET_INPUTS","DELETE_INPUT","EDIT_INPUT","SET_CURRENT","INPUTS_ERROR","http","getInputs","dispatch","setLoading","res","fetch","data","json","type","payload","err","addInput","name","price","content","console","log","method","body","JSON","stringify","headers","deleteInput","id","setCurrent","dir","editInput","Accept"],"mappings":"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","sourcesContent":["import {\n  ADD_INPUT,\n  SET_LOADING,\n  SET_EDIT_MODE,\n  GET_INPUTS,\n  DELETE_INPUT,\n  EDIT_INPUT,\n  SET_CURRENT,\n  INPUTS_ERROR,\n} from \"./types\";\n\nconst http = \"http://localhost:7070/api/services/\";\n\n// GET INPUTS\nexport const getInputs = () => async (dispatch) => {\n  dispatch(setLoading());\n  try {\n    const res = await fetch(`${http}`);\n    const data = await res.json();\n\n    dispatch({\n      type: GET_INPUTS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: INPUTS_ERROR,\n      payload: err,\n    });\n  }\n};\n\n//ADD INPUT\nexport const addInput = (name, price, content) => async (dispatch) => {\n  dispatch(setLoading());\n  console.log(\"fired\");\n  try {\n    console.log(\"fired\");\n    const res = await fetch(`${http}`, {\n      method: \"POST\",\n      body: JSON.stringify({name, price, content}),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await res.json();\n\n    dispatch({\n      type: ADD_INPUT,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: INPUTS_ERROR,\n      payload: err,\n    });\n  }\n};\n\n//DELETE INPUT\nexport const deleteInput = (id) => async (dispatch) => {\n  dispatch(setLoading());\n  try {\n    await fetch(`${http}:${id}`, {\n      method: \"DELETE\",\n    });\n\n    dispatch({\n      type: DELETE_INPUT,\n      payload: id,\n    });\n  } catch (err) {\n    dispatch({\n      type: INPUTS_ERROR,\n      payload: err,\n    });\n  }\n};\n\n//SET CURRENT\nexport const setCurrent = (id) => async (dispatch) => {\n  dispatch(setLoading());\n\n  try {\n    const res = await fetch(`${http}${id}`);\n    const data = await res.json();\n\n    dispatch({\n      type: SET_CURRENT,\n      payload: data,\n    });\n  } catch (err) {\n    console.dir(err);\n    dispatch({\n      type: INPUTS_ERROR,\n      payload: err,\n    });\n  }\n};\n\n// EDIT INPUT\nexport const editInput = (id, name, price, content) => async (dispatch) => {\n  dispatch(setLoading());\n  try {\n    const res = await fetch(`${http}`, {\n      method: \"POST\",\n      body: JSON.stringify({id, name, price, content}),\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await res.json();\n\n    dispatch({\n      type: EDIT_INPUT,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: INPUTS_ERROR,\n      payload: err,\n    });\n  }\n};\n\n// Set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}