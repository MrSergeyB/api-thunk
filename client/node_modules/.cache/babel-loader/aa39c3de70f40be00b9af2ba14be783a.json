{"ast":null,"code":"var _jsxFileName = \"/Users/blokhinsergey/Desktop/StudyIt/React/netology/api-redux/client/src/components/input-form/input-form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addInput, editInput } from \"../../actions/inputActions\";\nimport \"./input-from.css\";\n\nconst InputForm = ({\n  addInput,\n  editItem,\n  editMode,\n  editInput\n}) => {\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  useEffect(() => {\n    if (editMode) {\n      setPrice(editItem.price);\n      setName(editItem.name);\n      setDescription(editItem.description);\n    } // eslint-disable-next-line\n\n  }, [editMode]);\n\n  const clearInputFields = () => {\n    setPrice(\"\");\n    setName(\"\");\n    setContent(\"\");\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (editMode) {\n      editInput(editItem.id, name, price, description);\n      clearInputFields();\n    } else {\n      addInput(name, price, description);\n      clearInputFields();\n    }\n  };\n\n  const handleCancel = e => {\n    e.preventDefault();\n    editInput(editItem.id, name, price, content);\n    clearInputFields();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"\\u0412\\u0438\\u0434 \\u0440\\u0435\\u043C\\u043E\\u043D\\u0442\\u0430\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"name-input\",\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"\\u0426\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"price-input\",\n    type: \"number\",\n    value: price,\n    onChange: e => setPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"content-input\",\n    type: \"text\",\n    value: content,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"save-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Save\"), editMode ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"cancel-btn\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Cancel\") : null);\n};\n\nInputForm.propTypes = {\n  addInput: PropTypes.func.isRequired,\n  editItem: PropTypes.object.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  editInput: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  editItem: state.inputs.editItem,\n  editMode: state.inputs.editMode\n});\n\nexport default connect(mapStateToProps, {\n  addInput,\n  editInput\n})(InputForm);","map":{"version":3,"sources":["/Users/blokhinsergey/Desktop/StudyIt/React/netology/api-redux/client/src/components/input-form/input-form.js"],"names":["React","useState","useEffect","PropTypes","connect","addInput","editInput","InputForm","editItem","editMode","name","setName","price","setPrice","content","setContent","setDescription","description","clearInputFields","handleSubmit","e","preventDefault","id","handleCancel","target","value","propTypes","func","isRequired","object","bool","mapStateToProps","state","inputs"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {addInput, editInput} from \"../../actions/inputActions\";\nimport \"./input-from.css\";\n\nconst InputForm = ({addInput, editItem, editMode, editInput}) => {\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    if (editMode) {\n      setPrice(editItem.price);\n      setName(editItem.name);\n      setDescription(editItem.description);\n    }\n    // eslint-disable-next-line\n  }, [editMode]);\n\n  const clearInputFields = () => {\n    setPrice(\"\");\n    setName(\"\");\n    setContent(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (editMode) {\n      editInput(editItem.id, name, price, description);\n      clearInputFields();\n    } else {\n      addInput(name, price, description);\n      clearInputFields();\n    }\n  };\n\n  const handleCancel = (e) => {\n    e.preventDefault();\n\n    editInput(editItem.id, name, price, content);\n    clearInputFields();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <label>Вид ремонта</label>\n      <input\n        className=\"name-input\"\n        type=\"text\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        autoFocus\n      />\n      <label>Цена</label>\n      <input\n        className=\"price-input\"\n        type=\"number\"\n        value={price}\n        onChange={(e) => setPrice(e.target.value)}\n      />\n      <label>Описание</label>\n      <input\n        className=\"content-input\"\n        type=\"text\"\n        value={content}\n        onChange={(e) => setDescription(e.target.value)}\n      />\n      <button type=\"submit\" className=\"save-btn\">\n        Save\n      </button>\n      {editMode ? (\n        <button className=\"cancel-btn\" onClick={handleCancel}>\n          Cancel\n        </button>\n      ) : null}\n    </form>\n  );\n};\n\nInputForm.propTypes = {\n  addInput: PropTypes.func.isRequired,\n  editItem: PropTypes.object.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  editInput: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  editItem: state.inputs.editItem,\n  editMode: state.inputs.editMode,\n});\n\nexport default connect(mapStateToProps, {addInput, editInput})(InputForm);\n"]},"metadata":{},"sourceType":"module"}