{"ast":null,"code":"var _jsxFileName = \"/Users/blokhinsergey/Desktop/StudyIt/React/netology/api-redux/client/src/components/input-form/input-form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addInput, addEditedInputs } from \"../../actions/inputActions\";\nimport \"./input-from.css\";\n\nconst InputForm = ({\n  addInput,\n  editItem,\n  editMode,\n  addEditedInputs\n}) => {\n  const [task, setTask] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  useEffect(() => {\n    if (editMode) {\n      setPrice(editItem[0].price);\n      setTask(editItem[0].task);\n    } // eslint-disable-next-line\n\n  }, [editMode]);\n\n  const clearInputFields = () => {\n    setPrice(\"\");\n    setTask(\"\");\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (editMode) {\n      addEditedInputs(editItem[0].id, task, price);\n      clearInputFields();\n    } else {\n      addInput(task, price);\n      clearInputFields();\n    }\n  };\n\n  const handleCancel = e => {\n    e.preventDefault();\n    addEditedInputs(editItem[0].id, task, price);\n    clearInputFields();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"\\u0412\\u0438\\u0434 \\u0440\\u0435\\u043C\\u043E\\u043D\\u0442\\u0430\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"task-input\",\n    type: \"text\",\n    value: task,\n    onChange: e => setTask(e.target.value),\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"\\u0426\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"price-input\",\n    type: \"number\",\n    value: price,\n    onChange: e => setPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"save-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Save\"), editMode ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"cancel-btn\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Cancel\") : null);\n};\n\nconst mapStateToProps = state => ({\n  editItem: state.inputs.editItem,\n  editMode: state.inputs.editMode\n});\n\nexport default connect(mapStateToProps, {\n  addInput,\n  addEditedInputs\n})(InputForm);","map":{"version":3,"sources":["/Users/blokhinsergey/Desktop/StudyIt/React/netology/api-redux/client/src/components/input-form/input-form.js"],"names":["React","useState","useEffect","connect","addInput","addEditedInputs","InputForm","editItem","editMode","task","setTask","price","setPrice","clearInputFields","handleSubmit","e","preventDefault","id","handleCancel","target","value","mapStateToProps","state","inputs"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport {addInput, addEditedInputs} from \"../../actions/inputActions\";\nimport \"./input-from.css\";\n\nconst InputForm = ({addInput, editItem, editMode, addEditedInputs}) => {\n  const [task, setTask] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  useEffect(() => {\n    if (editMode) {\n      setPrice(editItem[0].price);\n      setTask(editItem[0].task);\n    }\n    // eslint-disable-next-line\n  }, [editMode]);\n\n  const clearInputFields = () => {\n    setPrice(\"\");\n    setTask(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (editMode) {\n      addEditedInputs(editItem[0].id, task, price);\n      clearInputFields();\n    } else {\n      addInput(task, price);\n      clearInputFields();\n    }\n  };\n\n  const handleCancel = (e) => {\n    e.preventDefault();\n\n    addEditedInputs(editItem[0].id, task, price);\n    clearInputFields();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <label>Вид ремонта</label>\n      <input\n        className=\"task-input\"\n        type=\"text\"\n        value={task}\n        onChange={(e) => setTask(e.target.value)}\n        autoFocus\n      />\n      <label>Цена</label>\n      <input\n        className=\"price-input\"\n        type=\"number\"\n        value={price}\n        onChange={(e) => setPrice(e.target.value)}\n      />\n      <button type=\"submit\" className=\"save-btn\">\n        Save\n      </button>\n      {editMode ? (\n        <button className=\"cancel-btn\" onClick={handleCancel}>\n          Cancel\n        </button>\n      ) : null}\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  editItem: state.inputs.editItem,\n  editMode: state.inputs.editMode,\n});\n\nexport default connect(mapStateToProps, {addInput, addEditedInputs})(InputForm);\n"]},"metadata":{},"sourceType":"module"}