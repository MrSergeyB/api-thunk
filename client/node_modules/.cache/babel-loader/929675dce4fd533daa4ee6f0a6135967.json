{"ast":null,"code":"import { ADD_INPUT, SET_LOADING, REMOVE_INPUT, EDIT_INPUT, ADD_EDITED_INPUTS, HANDLE_FILTER } from \"../actions/types\";\nconst intialState = {\n  list: null,\n  editItem: {},\n  editMode: false,\n  loading: false\n};\nexport default ((state = intialState, action) => {\n  switch (action.type) {\n    case GET_INPUTS:\n      return { ...state,\n        list: action.payload,\n        loading: false\n      };\n\n    case ADD_INPUT:\n      return { ...state,\n        list: [...state.list, {\n          id: action.id,\n          task: action.task,\n          price: action.price\n        }]\n      };\n\n    case REMOVE_INPUT:\n      return { ...state,\n        list: [...state.list.filter(input => input.id !== action.id)]\n      };\n\n    case EDIT_INPUT:\n      return { ...state,\n        editMode: !state.editMode,\n        editItem: state.list.filter(input => input.id === action.id)\n      };\n\n    case ADD_EDITED_INPUTS:\n      return {\n        editMode: !state.editMode,\n        editItem: {},\n        list: [...state.list.filter(input => input.id !== action.id), {\n          id: action.id,\n          task: action.task,\n          price: action.price\n        }]\n      };\n\n    case HANDLE_FILTER:\n      if (action.task.length > 0) {\n        return { ...state,\n          list: [...state.list.filter(input => {\n            return input.task.toLowerCase().includes(action.task.toLowerCase());\n          })]\n        };\n      } else {\n        return { ...state,\n          list: data\n        };\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/blokhinsergey/Desktop/StudyIt/React/netology/api-redux/client/src/reducers/inputReducer.js"],"names":["ADD_INPUT","SET_LOADING","REMOVE_INPUT","EDIT_INPUT","ADD_EDITED_INPUTS","HANDLE_FILTER","intialState","list","editItem","editMode","loading","state","action","type","GET_INPUTS","payload","id","task","price","filter","input","length","toLowerCase","includes","data"],"mappings":"AAAA,SACEA,SADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,UAJF,EAKEC,iBALF,EAMEC,aANF,QAOO,kBAPP;AASA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAE,IADY;AAElBC,EAAAA,QAAQ,EAAE,EAFQ;AAGlBC,EAAAA,QAAQ,EAAE,KAHQ;AAIlBC,EAAAA,OAAO,EAAE;AAJS,CAApB;AAOA,gBAAe,CAACC,KAAK,GAAGL,WAAT,EAAsBM,MAAtB,KAAiC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,UAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,IAAI,EAAEK,MAAM,CAACG,OAFR;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKV,SAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,IAAI,EAAE,CACJ,GAAGI,KAAK,CAACJ,IADL,EAEJ;AACES,UAAAA,EAAE,EAAEJ,MAAM,CAACI,EADb;AAEEC,UAAAA,IAAI,EAAEL,MAAM,CAACK,IAFf;AAGEC,UAAAA,KAAK,EAAEN,MAAM,CAACM;AAHhB,SAFI;AAFD,OAAP;;AAYF,SAAKhB,YAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAN,CAAWY,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACJ,EAAN,KAAaJ,MAAM,CAACI,EAAjD,CAAJ;AAFD,OAAP;;AAKF,SAAKb,UAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,QAAQ,EAAE,CAACE,KAAK,CAACF,QAFZ;AAGLD,QAAAA,QAAQ,EAAEG,KAAK,CAACJ,IAAN,CAAWY,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACJ,EAAN,KAAaJ,MAAM,CAACI,EAAjD;AAHL,OAAP;;AAMF,SAAKZ,iBAAL;AACE,aAAO;AACLK,QAAAA,QAAQ,EAAE,CAACE,KAAK,CAACF,QADZ;AAELD,QAAAA,QAAQ,EAAE,EAFL;AAGLD,QAAAA,IAAI,EAAE,CACJ,GAAGI,KAAK,CAACJ,IAAN,CAAWY,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACJ,EAAN,KAAaJ,MAAM,CAACI,EAAjD,CADC,EAEJ;AACEA,UAAAA,EAAE,EAAEJ,MAAM,CAACI,EADb;AAEEC,UAAAA,IAAI,EAAEL,MAAM,CAACK,IAFf;AAGEC,UAAAA,KAAK,EAAEN,MAAM,CAACM;AAHhB,SAFI;AAHD,OAAP;;AAaF,SAAKb,aAAL;AACE,UAAIO,MAAM,CAACK,IAAP,CAAYI,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B,eAAO,EACL,GAAGV,KADE;AAELJ,UAAAA,IAAI,EAAE,CACJ,GAAGI,KAAK,CAACJ,IAAN,CAAWY,MAAX,CAAmBC,KAAD,IAAW;AAC9B,mBAAOA,KAAK,CAACH,IAAN,CACJK,WADI,GAEJC,QAFI,CAEKX,MAAM,CAACK,IAAP,CAAYK,WAAZ,EAFL,CAAP;AAGD,WAJE,CADC;AAFD,SAAP;AAUD,OAXD,MAWO;AACL,eAAO,EACL,GAAGX,KADE;AAELJ,UAAAA,IAAI,EAAEiB;AAFD,SAAP;AAID;;AAEH;AACE,aAAOb,KAAP;AApEJ;AAsED,CAvED","sourcesContent":["import {\n  ADD_INPUT,\n  SET_LOADING,\n  REMOVE_INPUT,\n  EDIT_INPUT,\n  ADD_EDITED_INPUTS,\n  HANDLE_FILTER,\n} from \"../actions/types\";\n\nconst intialState = {\n  list: null,\n  editItem: {},\n  editMode: false,\n  loading: false,\n};\n\nexport default (state = intialState, action) => {\n  switch (action.type) {\n    case GET_INPUTS:\n      return {\n        ...state,\n        list: action.payload,\n        loading: false,\n      };\n\n    case ADD_INPUT:\n      return {\n        ...state,\n        list: [\n          ...state.list,\n          {\n            id: action.id,\n            task: action.task,\n            price: action.price,\n          },\n        ],\n      };\n\n    case REMOVE_INPUT:\n      return {\n        ...state,\n        list: [...state.list.filter((input) => input.id !== action.id)],\n      };\n\n    case EDIT_INPUT:\n      return {\n        ...state,\n        editMode: !state.editMode,\n        editItem: state.list.filter((input) => input.id === action.id),\n      };\n\n    case ADD_EDITED_INPUTS:\n      return {\n        editMode: !state.editMode,\n        editItem: {},\n        list: [\n          ...state.list.filter((input) => input.id !== action.id),\n          {\n            id: action.id,\n            task: action.task,\n            price: action.price,\n          },\n        ],\n      };\n\n    case HANDLE_FILTER:\n      if (action.task.length > 0) {\n        return {\n          ...state,\n          list: [\n            ...state.list.filter((input) => {\n              return input.task\n                .toLowerCase()\n                .includes(action.task.toLowerCase());\n            }),\n          ],\n        };\n      } else {\n        return {\n          ...state,\n          list: data,\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}