{"ast":null,"code":"import { GET_INPUTS, SET_LOADING, DELETE_INPUT, SET_CURRENT, EDIT_INPUT, INPUTS_ERROR } from \"../actions/types\";\nconst intialState = {\n  list: null,\n  editItem: {},\n  editMode: false,\n  loading: false,\n  error: null\n};\nexport default ((state = intialState, action) => {\n  switch (action.type) {\n    case GET_INPUTS:\n      return { ...state,\n        list: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n      {\n        /*case ADD_INPUT:\n        return {\n        ...state,\n        list: [\n          ...state.list,\n          {\n            name: action.name,\n            content: action.content,\n            price: action.price,\n          },\n        ],\n        loading: false,\n        error: null,\n        };\n        */\n      }\n\n    case DELETE_INPUT:\n      return { ...state,\n        list: [...state.list.filter(input => input.id !== action.payload)],\n        loading: false,\n        error: null\n      };\n\n    case EDIT_INPUT:\n      return {\n        list: [...state.list.filter(input => input.id !== action.payload.id), {\n          id: action.payload.id,\n          name: action.payload.name,\n          content: action.payload.content,\n          price: action.payload.price\n        }],\n        editMode: false,\n        editItem: {},\n        loading: false,\n        error: null\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        editMode: true,\n        editItem: action.payload,\n        loading: false\n      };\n\n    case INPUTS_ERROR:\n      console.log(`Eroor: ${action.payload}`);\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/blokhinsergey/Desktop/StudyIt/React/netology/api-thunk/client/src/reducers/inputReducer.js"],"names":["GET_INPUTS","SET_LOADING","DELETE_INPUT","SET_CURRENT","EDIT_INPUT","INPUTS_ERROR","intialState","list","editItem","editMode","loading","error","state","action","type","payload","filter","input","id","name","content","price","console","log"],"mappings":"AAAA,SACEA,UADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,YANF,QAOO,kBAPP;AASA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAE,IADY;AAElBC,EAAAA,QAAQ,EAAE,EAFQ;AAGlBC,EAAAA,QAAQ,EAAE,KAHQ;AAIlBC,EAAAA,OAAO,EAAE,KAJS;AAKlBC,EAAAA,KAAK,EAAE;AALW,CAApB;AAQA,gBAAe,CAACC,KAAK,GAAGN,WAAT,EAAsBO,MAAtB,KAAiC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,UAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELL,QAAAA,IAAI,EAAEM,MAAM,CAACE,OAFR;AAGLL,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAOF,SAAKV,WAAL;AACE,aAAO,EAAC,GAAGW,KAAJ;AAAWF,QAAAA,OAAO,EAAE;AAApB,OAAP;AAEA;AACE;;;;;;;;;;;;;;;AAeD;;AAEH,SAAKR,YAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,IAAI,EAAE,CAAC,GAAGK,KAAK,CAACL,IAAN,CAAWS,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaL,MAAM,CAACE,OAAjD,CAAJ,CAFD;AAGLL,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAOF,SAAKP,UAAL;AACE,aAAO;AACLG,QAAAA,IAAI,EAAE,CACJ,GAAGK,KAAK,CAACL,IAAN,CAAWS,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaL,MAAM,CAACE,OAAP,CAAeG,EAAzD,CADC,EAEJ;AACEA,UAAAA,EAAE,EAAEL,MAAM,CAACE,OAAP,CAAeG,EADrB;AAEEC,UAAAA,IAAI,EAAEN,MAAM,CAACE,OAAP,CAAeI,IAFvB;AAGEC,UAAAA,OAAO,EAAEP,MAAM,CAACE,OAAP,CAAeK,OAH1B;AAIEC,UAAAA,KAAK,EAAER,MAAM,CAACE,OAAP,CAAeM;AAJxB,SAFI,CADD;AAULZ,QAAAA,QAAQ,EAAE,KAVL;AAWLD,QAAAA,QAAQ,EAAE,EAXL;AAYLE,QAAAA,OAAO,EAAE,KAZJ;AAaLC,QAAAA,KAAK,EAAE;AAbF,OAAP;;AAgBF,SAAKR,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,QAAQ,EAAE,IAFL;AAGLD,QAAAA,QAAQ,EAAEK,MAAM,CAACE,OAHZ;AAILL,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAOF,SAAKL,YAAL;AACEiB,MAAAA,OAAO,CAACC,GAAR,CAAa,UAASV,MAAM,CAACE,OAAQ,EAArC;AACA,aAAO,EACL,GAAGH,KADE;AAELD,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFT,OAAP;;AAKF;AACE,aAAOH,KAAP;AAvEJ;AAyED,CA1ED","sourcesContent":["import {\n  GET_INPUTS,\n  SET_LOADING,\n  DELETE_INPUT,\n  SET_CURRENT,\n  EDIT_INPUT,\n  INPUTS_ERROR,\n} from \"../actions/types\";\n\nconst intialState = {\n  list: null,\n  editItem: {},\n  editMode: false,\n  loading: false,\n  error: null,\n};\n\nexport default (state = intialState, action) => {\n  switch (action.type) {\n    case GET_INPUTS:\n      return {\n        ...state,\n        list: action.payload,\n        loading: false,\n        error: null,\n      };\n\n    case SET_LOADING:\n      return {...state, loading: true};\n\n      {\n        /*case ADD_INPUT:\n      return {\n        ...state,\n        list: [\n          ...state.list,\n          {\n            name: action.name,\n            content: action.content,\n            price: action.price,\n          },\n        ],\n        loading: false,\n        error: null,\n      };\n    */\n      }\n\n    case DELETE_INPUT:\n      return {\n        ...state,\n        list: [...state.list.filter((input) => input.id !== action.payload)],\n        loading: false,\n        error: null,\n      };\n\n    case EDIT_INPUT:\n      return {\n        list: [\n          ...state.list.filter((input) => input.id !== action.payload.id),\n          {\n            id: action.payload.id,\n            name: action.payload.name,\n            content: action.payload.content,\n            price: action.payload.price,\n          },\n        ],\n        editMode: false,\n        editItem: {},\n        loading: false,\n        error: null,\n      };\n\n    case SET_CURRENT:\n      return {\n        ...state,\n        editMode: true,\n        editItem: action.payload,\n        loading: false,\n      };\n\n    case INPUTS_ERROR:\n      console.log(`Eroor: ${action.payload}`);\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}