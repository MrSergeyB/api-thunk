{"ast":null,"code":"var _jsxFileName = \"/Users/blokhinsergey/Desktop/StudyIt/React/netology/api-thunk/client/src/components/display-inputs/display-inputs.js\";\nimport React, { useEffect } from \"react\";\nimport \"./display-inputs.css\";\nimport { connect } from \"react-redux\";\nimport SingleInput from \"../single-input\";\nimport Spinner from \"../spinner\";\nimport PropTypes from \"prop-types\";\nimport { getInputs } from \"../../actions/inputActions\";\n\nconst DisplayInputs = props => {\n  const {\n    loading,\n    list,\n    getInputs,\n    error\n  } = props;\n  useEffect(() => {\n    getInputs(); //eslint-disable-next-line\n  }, []);\n  console.log(error);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"display-input-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, error !== null ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }, error.message) : null, loading || list === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }) : list.map(input => /*#__PURE__*/React.createElement(SingleInput, {\n    key: input.id,\n    id: input.id,\n    name: input.name,\n    price: input.price,\n    content: input.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })));\n};\n\nDisplayInputs.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  list: PropTypes.array,\n  getInputs: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  loading: state.inputs.loading,\n  list: state.inputs.list,\n  error: state.inputs.error\n});\n\nexport default connect(mapStateToProps, {\n  getInputs\n})(DisplayInputs);","map":{"version":3,"sources":["/Users/blokhinsergey/Desktop/StudyIt/React/netology/api-thunk/client/src/components/display-inputs/display-inputs.js"],"names":["React","useEffect","connect","SingleInput","Spinner","PropTypes","getInputs","DisplayInputs","props","loading","list","error","console","log","message","map","input","id","name","price","content","propTypes","bool","isRequired","array","func","string","mapStateToProps","state","inputs"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,sBAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,SAAR,QAAwB,4BAAxB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,IAAV;AAAgBJ,IAAAA,SAAhB;AAA2BK,IAAAA;AAA3B,MAAoCH,KAA1C;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,SAAS,GADK,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,KAAK,IAAV,gBAAiB;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,KAAK,CAACG,OAA5B,CAAjB,GAA4D,IAD/D,EAEGL,OAAO,IAAIC,IAAI,KAAK,IAApB,gBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGCA,IAAI,CAACK,GAAL,CAAUC,KAAD,iBACP,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,IAAA,EAAE,EAAED,KAAK,CAACC,EAFZ;AAGE,IAAA,IAAI,EAAED,KAAK,CAACE,IAHd;AAIE,IAAA,KAAK,EAAEF,KAAK,CAACG,KAJf;AAKE,IAAA,OAAO,EAAEH,KAAK,CAACI,OALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALJ,CADF;AAkBD,CA5BD;;AA8BAb,aAAa,CAACc,SAAd,GAA0B;AACxBZ,EAAAA,OAAO,EAAEJ,SAAS,CAACiB,IAAV,CAAeC,UADA;AAExBb,EAAAA,IAAI,EAAEL,SAAS,CAACmB,KAFQ;AAGxBlB,EAAAA,SAAS,EAAED,SAAS,CAACoB,IAAV,CAAeF,UAHF;AAIxBZ,EAAAA,KAAK,EAAEN,SAAS,CAACqB;AAJO,CAA1B;;AAOA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCnB,EAAAA,OAAO,EAAEmB,KAAK,CAACC,MAAN,CAAapB,OADY;AAElCC,EAAAA,IAAI,EAAEkB,KAAK,CAACC,MAAN,CAAanB,IAFe;AAGlCC,EAAAA,KAAK,EAAEiB,KAAK,CAACC,MAAN,CAAalB;AAHc,CAAZ,CAAxB;;AAKA,eAAeT,OAAO,CAACyB,eAAD,EAAkB;AAACrB,EAAAA;AAAD,CAAlB,CAAP,CAAsCC,aAAtC,CAAf","sourcesContent":["import React, {useEffect} from \"react\";\nimport \"./display-inputs.css\";\nimport {connect} from \"react-redux\";\nimport SingleInput from \"../single-input\";\nimport Spinner from \"../spinner\";\nimport PropTypes from \"prop-types\";\nimport {getInputs} from \"../../actions/inputActions\";\n\nconst DisplayInputs = (props) => {\n  const {loading, list, getInputs, error} = props;\n\n  useEffect(() => {\n    getInputs();\n    //eslint-disable-next-line\n  }, []);\n\n  console.log(error);\n\n  return (\n    <div className=\"display-input-box\">\n      {error !== null ? <p className=\"error\">{error.message}</p> : null}\n      {loading || list === null ? (\n        <Spinner />\n      ) : (\n        list.map((input) => (\n          <SingleInput\n            key={input.id}\n            id={input.id}\n            name={input.name}\n            price={input.price}\n            content={input.content}\n          />\n        ))\n      )}\n    </div>\n  );\n};\n\nDisplayInputs.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  list: PropTypes.array,\n  getInputs: PropTypes.func.isRequired,\n  error: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.inputs.loading,\n  list: state.inputs.list,\n  error: state.inputs.error,\n});\nexport default connect(mapStateToProps, {getInputs})(DisplayInputs);\n"]},"metadata":{},"sourceType":"module"}